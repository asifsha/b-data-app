{"version":3,"sources":["api/ServiceApi.js","actions/apiActions.js","actions/actionTypes.js","components/Charts/Charts.js","App.js","serviceWorker.js","reducers/initialState.js","reducers/index.js","reducers/dataReducer.js","store/store.js","index.js"],"names":["ServiceApi","Promise","resolve","reject","axios","get","baseUrl","then","response","console","log","data","catch","error","GetData","dispatch","getData","loadDataSuccess","type","ChartsExport","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","undefined","props","actions","react_default","a","createElement","id","style","width","height","overflow","react_d3_tree_min_default","useCollapseData","translate","x","y","styles","links","stroke","nodes","node","circle","fill","name","attributes","leafNode","Component","groupBy","list","keyGetter","map","Map","forEach","item","collection","push","set","Charts","connect","state","ownProps","preIcoGrouped","icoGrouped","finalIcoGrouped","treeData","d","totalRecords","icoRecords","preIcoRecords","finalIcoRecords","preIco","length","ico","finalIco","cur","currency","Total Records","children","Records","_collapsed","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","_ref","_ref2","slicedToArray","values","o","min","Math","toConsumableArray","toExponential","max","obj","Min Amount","Max Amount","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_ref3","_ref4","keyIco","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_ref5","_ref6","keyFinalIco","bindActionCreators","apiActions","App","className","Boolean","window","location","hostname","match","initialState","rootReducer","combineReducers","action","history","createHistory","middleware","thunk","routerMiddleware","composedEnhancers","compose","applyMiddleware","concat","store","createStore","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d9e2808d.chunk.js","sourcesContent":["\nimport axios from 'axios';\n\nexport default class ServiceApi {\n    static baseUrl = 'https://blockchain.brickblock.io/inputs';\n\n    static getData() {\n        return new Promise((resolve, reject) => {\n\n\n            axios.get(ServiceApi.baseUrl)\n                .then(function (response) {\n                    console.log(response);\n                    if (response.data != null)\n                        resolve(response.data);\n                    resolve({});\n                }).catch(function (error) {\n                    console.log(error);\n                    reject(error);\n                });\n\n\n        });\n    }    \n\n}\n","import * as types from './actionTypes';\nimport ServiceApi from '../api/ServiceApi';\n\nexport const GetData = () => {\n  return dispatch => {\n    return ServiceApi.getData().then(data => {\n      dispatch(loadDataSuccess(data));\n    }).catch(error => {\n      throw (error);\n    });\n\n  }\n}\n\n\nexport const loadDataSuccess = (data) => {\n  return {type: types.ApiGetData, data};\n}","export const ApiGetData = 'ApiGetData';\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport * as apiActions from '../../actions/apiActions';\n\nimport Tree from 'react-d3-tree';\n\n\n\nexport class ChartsExport extends Component {\n\n \n  componentDidMount() {\n    if(this.props.actions!==undefined)\n    this.props.actions.GetData();\n  }  \n\n  render() {\n    console.log(this.props.data);\n\n    return (\n      <div >\n\n\n        <div id=\"treeWrapper\" style={{ width: '75em', height: '50em', overflow: 'scroll' }}>\n\n          <Tree data={this.props.data} useCollapseData={true}\n            translate={{ x: 150, y: 250 }}\n            styles={\n              {\n                links: { stroke: '#FFFFFF' },\n                nodes: {\n                  node: {\n                    circle: { stroke: '#FFFFFF', fill: '#FFFFFF' },\n                    name: { stroke: '#FFFFFF', fill: '#FFFFFF' },\n                    attributes: { stroke: '#A3A6AD' }\n                  },\n                  leafNode : {\n                    circle: { stroke: '#FFFFFF', fill: '#18223C' },\n                    name: { stroke: '#FFFFFF',  },\n                    attributes: { stroke: '#A3A6AD' }\n                  }\n                }\n              }\n            }\n\n          />\n\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\nfunction groupBy(list, keyGetter) {\n  const map = new Map();\n  list.forEach((item) => {\n    const key = keyGetter(item);\n    const collection = map.get(key);\n    if (!collection) {\n      map.set(key, [item]);\n    } else {\n      collection.push(item);\n    }\n  });\n  return map;\n}\n\n\nfunction mapStateToProps(state, ownProps) {\n  \n  console.log('mapstatetoprops');\n  \n  let treeData = [{ name: '' }];\n  let d = state.data;\n  let totalRecords = 0;\n  let icoRecords = 0;\n  let preIcoRecords = 0;\n  let finalIcoRecords = 0;\n  let preIcoGrouped, icoGrouped, finalIcoGrouped;\n\n  if (d !== undefined && d.preIco !== undefined) {\n    console.log(d.preIco.length);\n\n    preIcoRecords = d.preIco.length;\n    icoRecords = d.ico.length;\n    finalIcoRecords = d.finalIco.length;\n    totalRecords = preIcoRecords + icoRecords + finalIcoRecords;\n    preIcoGrouped = groupBy(d.preIco, cur => cur.currency);\n    icoGrouped = groupBy(d.ico, cur => cur.currency);\n    finalIcoGrouped = groupBy(d.finalIco, cur => cur.currency);\n    console.log(preIcoGrouped);\n    \n    treeData = [\n      {\n        name: 'Data',\n\n        attributes: {\n          'Total Records': totalRecords\n\n        },\n        children: [{\n          name: 'PreIco',\n          attributes: {\n            'Records': preIcoRecords\n          },\n          _collapsed: true,\n          children: []\n        },\n        {\n          name: 'Ico',\n          attributes: {\n            'Records': icoRecords\n          },\n          _collapsed: true,\n          children: []\n        },\n        {\n          name: 'FinalIco',\n          attributes: {\n            'Records': finalIcoRecords\n\n          },\n          _collapsed: true,\n          children: []\n        }\n        ],\n\n      }\n    ];\n\n    console.log(treeData);\n    for (var [key, value] of preIcoGrouped) {\n      \n      let values = (value.map(function (o) { return o.value; }));\n      let min = Math.min(...values).toExponential();\n      let max = Math.max(...values).toExponential();\n      let obj = { name: key, attributes: { 'Records': value.length, 'Min Amount': min, 'Max Amount': max } };\n      treeData[0].children[0].children.push(obj);\n\n        \n\n    }\n\n    for (var [keyIco, valueIco] of icoGrouped) {\n      \n      let values = (valueIco.map(function (o) { return o.value; }));\n      let min = Math.min(...values).toExponential();\n      let max = Math.max(...values).toExponential();\n      let obj = { name: keyIco, attributes: { 'Records': value.length, 'Min Amount': min, 'Max Amount': max } };\n      treeData[0].children[1].children.push(obj);\n\n    }\n\n    for (var [keyFinalIco, valueFinalIco] of finalIcoGrouped) {\n      let values = (valueFinalIco.map(function (o) { return o.value; }));\n      let min = Math.min(...values).toExponential();\n      let max = Math.max(...values).toExponential();\n      let obj = { name: keyFinalIco, attributes: { 'Records': value.length, 'Min Amount': min, 'Max Amount': max } };\n      treeData[0].children[2].children.push(obj);\n\n    }\n  }\n\n\n\n\n\n  \n  return {\n    data: treeData\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(apiActions, dispatch)\n}\n)\n\nexport const Charts = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ChartsExport)\n\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Charts } from './components/Charts/Charts';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Charts></Charts>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export default {               \n    data: []\n};","import {combineReducers} from 'redux';\nimport data from './dataReducer';\n\n\n\nconst rootReducer= combineReducers({    \n    data     \n});\n\nexport default rootReducer;","import * as types from '../actions/actionTypes';\nimport initialState from './initialState';\n\n\nexport default (state = initialState.data, action) => {    \n    switch (action.type) {\n        case types.ApiGetData:        \n            return action.data;\n        default:\n            return state;\n    }\n}\n\n\n\n\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport { routerMiddleware } from 'react-router-redux'\nimport thunk from 'redux-thunk'\nimport createHistory from 'history/createBrowserHistory'\nimport rootReducer from '.././reducers'\n//import reduxImmutableStateInvariant from 'redux-immutable-state-invariant';\n\n//import initialState from '.././reducers/initialState'\n\nexport const history = createHistory()\n\nconst initialState = {}\n \nconst enhancers = []\nconst middleware = [\n  thunk,\n  routerMiddleware(history)\n]\n\nif (process.env.NODE_ENV === 'development') {\n  const devToolsExtension = window.devToolsExtension\n\n  if (typeof devToolsExtension === 'function') {\n    enhancers.push(devToolsExtension())\n  }\n}\n\nconst composedEnhancers = compose(\n  applyMiddleware(...middleware),\n  ...enhancers\n)\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composedEnhancers  \n)\n\n export default store;\n// export const history = createHistory();\n// export default function configureStore(initialState) {\n//     return createStore(\n//         rootReducer,\n//         initialState,\n//         applyMiddleware(thunk)\n//     );\n// }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\n\n\n\n\nReactDOM.render(\n    <Provider store={store}>\n       <App/>\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}